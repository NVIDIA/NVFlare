.. _poc_command:

*****************************************
Commmand for Proof Of Concept (POC) Mode
*****************************************

Introduction to the POC Command
===============================

The POC command allows users to try out the features of FLARE in a proof of concept deployment on a single machine.

In release 2.2, the poc command has been updated to make it easier to use. 

Syntax and Usage
=================

.. code-block::

  nvflare poc -h
  
  usage: nvflare poc [-h] [-n [NUMBER_OF_CLIENTS]] [-p [PACKAGE]] [-gpu [GPU [GPU ...]]]
                     [--prepare] [--start] [--stop] [--clean]

  optional arguments:
    -h, --help            show this help message and exit
    -n [NUMBER_OF_CLIENTS], --number_of_clients [NUMBER_OF_CLIENTS]
                          number of sites or clients, default to 2
    -p [PACKAGE], --package [PACKAGE]
                          package directory, default to all = all packages, only used for
                          start/stop-poc commands when specified
    -gpu [GPU [GPU ...]], --gpu [GPU [GPU ...]]
                          gpu device ids will be used as CUDA_VISIBLE_DEVICES. used for poc
                          start command
    --prepare             prepare poc workspace
    --start               start poc
    --stop                stop poc
    --clean               cleanup poc workspace

.. note::

    After you clone the NVFlare GitHub repository, you may optionally define an ``NVFLARE_HOME`` environment variable to point to the local NVFlare directory so a symbolic link is created to point the transfer directory to the examples in the code base. For example, if the the NVFlare GitHub repository is cloned under ~/projects, then you should set ``NVFLARE_HOME=~/projects/NVFlare``. If the NVFLARE_HOME environment variable is not set, you will need to manually copy the examples to the transfer directory.


Setup poc workspace
===================

.. code-block::

  nvflare poc --prepare
  prepare_poc at /tmp/nvflare/poc for 2 clients
  This will delete poc folder in current directory and create a new one. Is it OK to proceed? (y/N) y
  Successfully creating poc folder at /tmp/nvflare/poc.  Please read poc/Readme.rst for user guide.
   
  
  WARNING:
  ******* Files generated by this poc command are NOT intended for production environments.
  link examples from /home/chester/projects/NVFlare/examples to /tmp/nvflare/poc/admin/transfer


This is similar to old command 

.. code-block::

  poc -n 2

except that workspace is default to /tmp/nvflare/poc, and default n = 2 clients is not specified. 

notice that: 

we link examples from /home/chester/projects/NVFlare/examples to /tmp/nvflare/poc/admin/transfer

We automatically setup the transfer directory as symlink to examples, we can do this as we leverage the NVFLRAE_HOME environment variable. 


Replace the default POC workspace
---------------------------------
One can change the default  poc workspace to any location.  All you need to do is to set env. variable NVFLARE_POC_WORKSPACE

NVFLARE_POC_WORKSPACE="/tmp/nvflare/poc2"

In this example,  we  change the default workspace to different location /tmp/nvfalre/poc2

now:

nvflare poc  --prepare

will generate poc in workspace /tmp/nvfalre/poc2


Start Package(s)
================
Once we get the poc package generated with prepare command, we are ready to start. if use prepared the poc using default workspace, then you need to start with the same default workspace, otherwise, you need to specify the workspace.

Start ALL packages
------------------

.. code-block::

  nvflare poc --start

will start ALL clients (site-1, site-2) and server as well as FLARE Console (aka Admin Client) located in the default workspace=/tmp/nvflare/poc

.. note::

    If you run ``nvflare poc --start`` before prepare, you will get the following error:

        .. code-block:: shell

           nvflare poc --start
           start_poc at /tmp/nvflare/poc, white_list=[]
           workspace /tmp/nvflare/poc is not ready, please use poc --prepare to prepare poc workspace

.. note::

    If you prefer to have the FLARE Console on a different terminal, you can use ``nvflare poc --start -ex admin``.

Start the server only
----------------------

.. code-block::

    nvflare poc --start -p server

Start the FLARE Console (previously called the Admin Client)
-------------------------------------------------------------

.. code-block::

    nvflare poc --start -p admin

Start Clients with GPU assignment
----------------------------------

If the user provides the GPU device IDs and in certain order, such as:

.. code-block::

    nvflare poc -gpu 1 0 0 2 --start

The system will try to match the clients with the given GPU devices order, in this example, site-1 with GPU_id = 1, site-2 with GPU_id = 0, site-3 with GPU_id = 0 and site-4 with GPU_id = 2.

If the GPU ID does not exist on the client machine, you will get an error like:

.. code-block:: shell

    gpu_id provided is not available in the host machine, available GPUs are [0]

If no GPU id is specified, the host GPU ID will be used if available.

If there is no GPU, then there will be no assignments. If there are GPUs, they will be assigned to clients automatically.

.. tip::

    You can check the GPUs available with the following command (assuming you have NVIDIA GPUs with drivers installed):

        .. code-block:: shell

           nvidia-smi --list-gpus

Stop Package(s)
===============

To stop packages, issue the command:

.. code-block::

    nvflare poc --stop

Similarly, you can stop a specific package, for example:

.. code-block::

    nvflare poc --stop -p server

Note that you may need to exit the FLARE Console yourself.

Clean up
========

There is a command to clean up the POC workspace added in version 2.2 that will delete the POC workspaces:

.. code-block::

    nvflare poc --clean
