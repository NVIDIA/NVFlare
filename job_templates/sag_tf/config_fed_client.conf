format_version = 2
app_script = "cifar10_tf_fl.py"
app_config = ""
executors = [
  {
    tasks = [
      "train"
    ]
    executor {
      path = "nvflare.app_common.executors.client_api_launcher_executor.ClientAPILauncherExecutor"
      args {
        launcher_id = "launcher"
        # Timeout in seconds for waiting for a heartbeat from the training script. Defaults to 30 seconds.
        # Please refer to the class docstring for all available arguments
        heartbeat_timeout = 60

        # data_exchange_path: is the directory location of the parameters exchange.
        # If empty string, it will be set to the app_dir of the running job.
        # You can also set it to an absolute path in your system.
        data_exchange_path = ""

        # format of the exchange parameters
        params_exchange_format =  "numpy"

        # if the transfer_type is FULL, then it will be sent directly
        # if the transfer_type is DIFF, then we will calculate the
        # difference VS received parameters and send the difference
        params_transfer_type = "DIFF"

        # if training is true, the executor will expect
        # the custom code need to send back the trained parameters
        training = true

        # if global_evaluation is true, the executor will expect the
        # custom code to send back the evaluation metric
        global_evaluation = true

        # if launch_once is true, the executor will only call launcher.launch_task once
        # for the whole job, if launch_once is false, the executor will call launcher.launch_task
        # everytime it receives a task from server
        launch_once = true
      }
    }
  }
]
task_data_filters = []
task_result_filters = []
components = [
  {
    id = "launcher"
    path = "nvflare.app_common.launchers.subprocess_launcher.SubprocessLauncher"
    args {
      script = "python3 custom/{app_script}  {app_config} "
    }
  }
]
