{
  format_version = 2
  server {
    heart_beat_timeout = 600
  }
  task_data_filters =[]
  task_result_filters = []
  # path to defined PyTorch network
  # this assumes that there will be a "net.py" file with class name "Net", please modify accordingly
  model_class_path = "net.Net"
  components = [
    {
      id = "persistor"
      path = "nvflare.app_opt.pt.file_model_persistor.PTFileModelPersistor"
      args.model.path = "{model_class_path}"
    }
    {
      id = "shareable_generator"
      path = "nvflare.app_common.shareablegenerators.full_model_shareable_generator.FullModelShareableGenerator"
      args = {}
    }
  ]
  workflows = [
    {
      # server-side Cyclic Controller for Cyclic Weight Transfer
      id = "cyclic_ctl"
      path = "nvflare.app_common.workflows.cyclic_ctl.CyclicController"
      args {
        # see the doc strings for all available arguments
        num_rounds = 3
        task_assignment_timeout = 8
        persistor_id = "persistor"
        shareable_generator_id = "shareable_generator"
        # maps to the supported train task of the client-side PTClientAPILauncherExecutor
        task_name = "train"
      }
    }
  ]
}
