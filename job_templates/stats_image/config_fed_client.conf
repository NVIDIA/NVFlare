{
  "format_version": 2,

  # Here are the tasks and Executors
  "executors": [
    {
      # Here we only define one task named "fed_stats"
      "tasks": [ "fed_stats"],
      "executor": {
        # here we define a client-side execitor that trigger the Client's local statistics calcuation
        "id": "Executor",
        # class path of statistics executor
        "path": "nvflare.app_common.executors.statistics.statistics_executor.StatisticsExecutor",
        "args": {
           # statistics executor requires one local component, which client needs to provide
          "generator_id": "local_hist_generator"
        }
      }
    }
  ],


  # Here we define the data result filter, that is, the result must be filter by the following before return to server
  # for fed_stats task, we define "StatisticsPrivacyFilter" which consists several result cleansers. In this template
  # we only defined one cleanser: min_count_cleanser
  "task_result_filters": [
    {
      "tasks": ["fed_stats"],
      "filters":[
        {
          "name": "StatisticsPrivacyFilter",
          "args": {
            "result_cleanser_ids": [
              "min_count_cleanser"
            ]
          }
        }
      ]
    }
  ],

  # We can also define task data filter.
  "task_data_filters": [],

  "components": [
    {
      # here is the local component user need to write that match above executor requested component.
      "id": "local_hist_generator",
      "path": "image_statistics.ImageStatistics",
      "args": {
        # it exepects that the image data to be found
        "data_root": "/tmp/nvflare/image_stats/data"
      }
    },
    {
      # Here defines the data result filter, privacy cleanser that make sure the stats data won't real private data
      # this filter make sure that the min count is 10 before we return stats to server
      "id": "min_count_cleanser",
      "path": "nvflare.app_common.statistics.min_count_cleanser.MinCountCleanser",
      "args": {
        "min_count": 10
      }
    }
  ]
}
