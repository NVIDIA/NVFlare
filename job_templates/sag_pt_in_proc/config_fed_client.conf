{
  # version of the configuration
  format_version = 2

  fn_path = "train.main"
  fn_args =  {
                batch_size = 6
                dataset_path = "/tmp/nvflare/data/cifar10"
                num_workers = 2
             }

  # Client Computing Executors.
  executors = [
    {
      # tasks the executors are defined to handle
      tasks = ["train"]

      # This particular executor
      executor {

        path = "nvflare.app_opt.pt.in_process_client_api_executor.PTInProcessClientAPIExecutor"
        args {
              # if the task_fn_path is main, task_fn_args are passed as sys.argv
              # if the task_fn_path is a function, task_fn_args are passed as the function args
              # (Note: task_fn_path must be of the form {module}.{func_name})
              task_fn_path = "{fn_path}"
              task_fn_args = "{fn_args}"

              # if the transfer_type is FULL, then it will be sent directly
              # if the transfer_type is DIFF, then we will calculate the
              # difference VS received parameters and send the difference
              params_transfer_type = "DIFF"

              # if train_with_evaluation is true, the executor will expect
              # the custom code need to send back both the trained parameters and the evaluation metric
              # otherwise only trained parameters are expected
              train_with_evaluation = true

              # time interval in seconds. Time interval to wait before check if the local task has submitted the result
              # if the local task takes long time, you can increase this interval to larger number
              # uncomment to overwrite the default, default is 0.5 seconds
              result_pull_interval = 0.5

              # time interval in seconds. Time interval to wait before check if the trainig code has log metric (such as
              # Tensorboard log, MLFlow log or Weights & Biases logs. The result will be streanmed to the server side
              # then to the corresponding tracking system
              # if the log is not needed, you can set this to a larger number
              # uncomment to overwrite the default, default is None, which disable the log streaming feature.
              log_pull_interval = 0.1

        }
      }
    }
  ],

  # this defined an array of task data filters. If provided, it will control the data from server controller to client executor
  task_data_filters =  []

  # this defined an array of task result filters. If provided, it will control the result from client executor to server controller
  task_result_filters = []

  components =  [
      {
        "id": "event_to_fed",
        "name": "ConvertToFedEvent",
        "args": {"events_to_convert": ["analytix_log_stats"], "fed_event_prefix": "fed."}
      }
   ]
}
