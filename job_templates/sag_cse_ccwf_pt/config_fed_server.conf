{
  # version of the configuration
  format_version = 2

  # task data filter: if filters are provided, the filter will filter the data flow out of server to client.
  task_data_filters =[]

  # task result filter: if filters are provided, the filter will filter the result flow out of client to server.
  task_result_filters = []

  # This assumes that there will be a "net.py" file with class name "Net".
  # If your model code is not in "net.py" and class name is not "Net", please modify here
  model_class_path = "net.Net"

  # workflows: Array of workflows the control the Federated Learning workflow lifecycle.
  # One can specify multiple workflows. The NVFLARE will run them in the order specified.
  workflows = [
      {
        # server-side controller to manage job life cycle and configuration
        id = "svr_ctl"
        path = "nvflare.app_common.ccwf.server_ctl.ServerSideController"
        args {
          # the prefix for task names of this workflow
          task_name_prefix = "wf"
          # the maximum amount of time allowed for a client to miss a status report
          max_status_report_interval = 300
          # policy to choose which client to run the controller logic from
          starting_client_policy = "random"
          # timeout for the ClientControllerExecutor start task, which runs all of the controllers
          start_task_timeout = 600
        }
      }
  ]

  # List of components used in the server side workflow.
  components = [
  ]

}
