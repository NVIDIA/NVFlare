{
  format_version = 2
  min_clients = 3
  num_rounds = 2
  server.task_request_interval = 0.05
  task_data_filters = []
  task_result_filters =  []
  components = [
    {
      "id": "persistor",
      "path": "nvflare.app_opt.sklearn.joblib_model_param_persistor.JoblibModelParamPersistor",
      "args": {
        "initial_params": {
           # LogisticsRegression Model parameters
            penalty='l2'       # {‘l1’, ‘l2’, ‘elasticnet’, None}, default=’l2’
            tol=0.0001         # Tolerance for stopping criteria. default=1e-4
            C=1.0              # Inverse of regularization strength; must be a positive float. default to 1.0
            fit_intercept=True # Specifies if a constant (a.k.a. bias or intercept) should be added to the decision function.
            solver="lbfgs"     # Algorithm to use in the optimization problem. Default is ‘lbfgs’.
            max_iter=100       # Maximum number of iterations taken for the solvers to converge.
            multi_class="auto" # {‘auto’, ‘ovr’, ‘multinomial’}, default=’auto’
            verbose=0          # For the liblinear and lbfgs solvers set verbose to any positive number for verbosity.
            warm_start=False   # When set to True, reuse the solution of the previous call to fit as initialization, otherwise, just erase the previous solution. Useless for liblinear solver.
        }
      }
    },
    {
      "id": "shareable_generator",
      "name": "FullModelShareableGenerator",
      "args": {}
    },
    {
      "id": "aggregator",
      "name": "InTimeAccumulateWeightedAggregator",
      "args": {
        "expected_data_kind": "WEIGHTS"
      }
    }
  ],
  "workflows": [
    {
      "id": "scatter_and_gather",
      "name": "ScatterAndGather",
      "args": {
        "min_clients" : "{min_clients}",
        "num_rounds" : "{num_rounds}",
        "start_round": 0,
        "wait_time_after_min_received": 0,
        "aggregator_id": "aggregator",
        "persistor_id": "persistor",
        "shareable_generator_id": "shareable_generator",
        "train_task_name": "train",
        "train_timeout": 0
      }
    }
  ]
}
