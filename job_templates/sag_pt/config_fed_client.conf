{
  # version of the configuration
  format_version = 2

  # This is the application script which will be invoked. Client can replace this script with user's own training script.
  app_script = "cifar10.py"

  # Additional arguments needed by the training code. For example, in lightning, these can be --trainer.batch_size=xxx.
  app_config = ""

  # Client Computing Executors.
  executors = [
    {
      # tasks the executors are defined to handle
      tasks = ["train"]

      # This particular executor
      executor {

        # Eexecutor name : PTFilePipeLauncherExecutor
        # This is an executor for pytorch. The underline data exchange is using FilePipe.
        path = "nvflare.app_opt.pt.file_pipe_launcher_executor.PTFilePipeLauncherExecutor"

        args {

          # This executor take an component named "launcher"
          launcher_id = "launcher"

          heartbeat_timeout = 60
        }
      }
    }
  ],

  # this defined an array of task data filters. If provided, it will control the data to server
  task_data_filters =  []

  # this defined an array of task result filters. If provided, it will control the result to server
  task_result_filters = []

  components =  [
    {
     # This "launcher" component
      id = "launcher"

      # the name of component is SubprocessLauncher and path is the class path
      path = "nvflare.app_common.launchers.subprocess_launcher.SubprocessLauncher"

      # the launcher will invoke the scrupt
      args.script = "python custom/{app_script}  {app_config} "
    }
  ]
}
