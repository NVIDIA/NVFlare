format_version = 2
server {
    heart_beat_timeout = 600
}
task_data_filters = []
task_result_filters = []
components = [
    {
        id = "persistor"
        name = "PTFileModelPersistor"
        args {
            model {
                # path to defined PyTorch network
                path = "net.Net"
                args {}
            }
        }
    }
    {
        id = "shareable_generator"
        name = "FullModelShareableGenerator"
        args {}
    }
    {
        id = "aggregator"
        name = "InTimeAccumulateWeightedAggregator"
        args {
            expected_data_kind = "WEIGHTS"
        }
    }
    {
        id = "model_selector"
        name = "IntimeModelSelector"
        args {}
    }
    {
        id = "model_locator"
        name = "PTFileModelLocator"
        args {
            pt_persistor_id = "persistor"
        }
    }
    {
        id = "json_generator"
        name = "ValidationJsonGenerator"
        args {}
    }
]
workflows = [
    {
        id = "scatter_gather_ctl"
        name = "ScatterAndGather"
        args {
            min_clients = 2
            # can adjust number of Scatter-And-Gather rounds
            num_rounds = 2
            start_round = 0
            wait_time_after_min_received = 10
            aggregator_id = "aggregator"
            persistor_id = "persistor"
            shareable_generator_id = "shareable_generator"
            train_task_name = "train"
            train_timeout = 0
        }
    }
    {
        id = "cross_site_model_eval"
        name = "CrossSiteModelEval"
        args {
            model_locator_id = "model_locator"
            submit_model_timeout = 600
            validation_timeout = 6000
            cleanup_models = true
        }
    }
]
