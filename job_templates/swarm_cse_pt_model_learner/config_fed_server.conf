format_version = 2
task_data_filters = []
task_result_filters = []
components = [
  {
    # used for splitting the CIFAR-10 data for each site at the start of the run
    id = "data_splitter"
    path = "pt.utils.cifar10_data_splitter.Cifar10DataSplitter"
    args {
        split_dir = "/tmp/cifar10_splits"
        num_sites = 2
        # Dirichlet sampling under alpha for heterogeneity of data split
        alpha = 1.0
    }
  }
  {
    id = "json_generator"
    path = "nvflare.app_common.widgets.validation_json_generator.ValidationJsonGenerator"
    args {}
  }
]
workflows = [
  {
    # server-side controller to manage job life cycle
    id = "swarm_controller"
    path = "nvflare.app_common.ccwf.SwarmServerController"
    args {
      # can also set aggregation clients and train clients, see class for all available args
      num_rounds = 3
    }
  }
  {
    # server-side controller to manage configuration and evaluation workflow
    id = "cross_site_eval"
    path = "nvflare.app_common.ccwf.CrossSiteEvalServerController"
    args {
      # can also set evaluators and evaluatees, see class for all available args
      eval_task_timeout = 300
    }
  }
]
