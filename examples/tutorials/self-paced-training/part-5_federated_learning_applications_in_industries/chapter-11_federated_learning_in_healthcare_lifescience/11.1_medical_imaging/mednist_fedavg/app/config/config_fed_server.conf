{
  format_version = 2
  task_data_filters = []
  task_result_filters = []
  model_class_path = "monai.networks.nets.densenet121"
  spatial_dims = 2
  in_channels = 1
  out_channels = 6
  workflows = [
    {
      id = "scatter_and_gather"
      path = "nvflare.app_common.workflows.fedavg.FedAvg"
      args {
        num_clients = 2
        num_rounds = 5
      }
    }
  ]
  components = [
    {
      id = "persistor"
      path = "nvflare.app_opt.pt.file_model_persistor.PTFileModelPersistor"
      args {
        model {
          path = "{model_class_path}"
          args {
            spatial_dims = "{spatial_dims}"
            in_channels = "{in_channels}"
            out_channels = "{out_channels}"
          }
        }
      }
    }
    {
      id = "model_selector"
      path = "nvflare.app_common.widgets.intime_model_selector.IntimeModelSelector"
      args {
        key_metric = "accuracy"
      }
    }
    {
      id = "receiver"
      path = "nvflare.app_opt.tracking.tb.tb_receiver.TBAnalyticsReceiver"
      args {
        events = [
          "fed.analytix_log_stats"
        ]
      }
    }
    {
      id = "mlflow_receiver"
      path = "nvflare.app_opt.tracking.mlflow.mlflow_receiver.MLflowReceiver"
      args {
        tracking_uri = ""
        kw_args {
          experiment_name = "nvflare-fedavg-mednist-experiment"
          run_name = "nvflare-fedavg-mednist-with-mlflow"
          experiment_tags {
            "mlflow.note.content" = "## **NVFlare FedAvg MONAI experiment with MLflow**"
          }
          run_tags {
            "mlflow.note.content" = """## Federated Experiment tracking with MONAI and MLflow 
###"""
          }
        }
        artifact_location = "artifacts"
        events = [
          "fed.analytix_log_stats"
        ]
      }
    }
  ]
}
