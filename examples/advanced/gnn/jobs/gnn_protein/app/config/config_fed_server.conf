format_version = 2
task_data_filters = []
task_result_filters = []
model_class_path = "torch_geometric.nn.GraphSAGE"
workflows = [
  {
    id = "scatter_and_gather"
    path = "nvflare.app_common.workflows.scatter_and_gather.ScatterAndGather"
    args {
      min_clients = 2
      num_rounds = 2
      start_round = 0
      wait_time_after_min_received = 0
      aggregator_id = "aggregator"
      persistor_id = "persistor"
      shareable_generator_id = "shareable_generator"
      train_task_name = "train"
      train_timeout = 0
    }
  }
]
components = [
  {
    id = "persistor"
    path = "nvflare.app_opt.pt.file_model_persistor.PTFileModelPersistor"
    args {
      model {
        path = "{model_class_path}"
        args {
          in_channels = 50,
          hidden_channels = 64,
          num_layers = 2,
          out_channels = 64
        }
      }
    }
  }
  {
    id = "shareable_generator"
    path = "nvflare.app_common.shareablegenerators.full_model_shareable_generator.FullModelShareableGenerator"
    args {}
  }
  {
    id = "aggregator"
    path = "nvflare.app_common.aggregators.intime_accumulate_model_aggregator.InTimeAccumulateWeightedAggregator"
    args {
      expected_data_kind = "WEIGHTS"
    }
  }
  {
    id = "model_selector"
    path = "nvflare.app_common.widgets.intime_model_selector.IntimeModelSelector"
    args {
      key_metric = "test_f1"
    }
  }
]
