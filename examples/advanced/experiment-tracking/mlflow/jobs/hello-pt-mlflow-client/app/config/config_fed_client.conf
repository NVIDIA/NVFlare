{
  "format_version": 2,

  "executors": [
    {
      "tasks": [
        "train",
        "submit_model",
        "validate"
      ],
      "executor": {
        "id": "Executor",
        "path": "nvflare.app_common.executors.learner_executor.LearnerExecutor",
        "args": {
          "learner_id": "pt_learner"
        }
      }
    }
  ],
  "task_result_filters": [
  ],
  "task_data_filters": [
  ],
  "components": [
    {
      "id": "pt_learner",
      "path": "pt.learner_with_mlflow.PTLearner",
      "args": {
        "lr": 0.01,
        "epochs": 5,
        "analytic_sender_id": "log_writer"
      }
    },
    {
      "id": "log_writer",
      "path": "nvflare.app_opt.tracking.mlflow.mlflow_writer.MLflowWriter",
      "args": {"event_type": "analytix_log_stats"}
    },
    {
      "id": "event_to_fed",
      "path": "nvflare.app_common.widgets.convert_to_fed_event.ConvertToFedEvent",
      "args": {"events_to_convert": ["analytix_log_stats"], "fed_event_prefix": "fed."}
    },
    {
      "id": "mlflow_receiver_with_tracking_uri",
      "path": "nvflare.app_opt.tracking.mlflow.mlflow_receiver.MLflowReceiver",
      "args": {
        tracking_uri = "file:///{WORKSPACE}/{JOB_ID}/mlruns"
        "kw_args": {
          "experiment_name": "hello-pt-experiment",
          "run_name": "hello-pt-with-mlflow",
          "experiment_tags": {
            "mlflow.note.content": "## **Hello PyTorch experiment with MLflow**"
          },
          "run_tags": {
            "mlflow.note.content": "## Federated Experiment tracking with MLflow \n### Example of using **[NVIDIA FLARE](https://nvflare.readthedocs.io/en/main/index.html)** to train an image classifier using federated averaging ([FedAvg](https://arxiv.org/abs/1602.05629)) and [PyTorch](https://pytorch.org/) as the deep learning training framework. This example also highlights the Flare streaming capability from the clients to the server for server delivery to MLflow.\n\n> **_NOTE:_** \n This example uses the *[CIFAR-10](https://www.cs.toronto.edu/~kriz/cifar.html)* dataset and will load its data within the trainer code.\n"
          }
        },
        "artifact_location": "artifacts",
        "events": ["analytix_log_stats"]
      }
    }
  ]
}
