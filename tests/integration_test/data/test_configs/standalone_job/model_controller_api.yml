n_servers: 1
n_clients: 2
jobs_root_dir: ./data/jobs
cleanup: True

tests:
  - test_name: "run pt-mc-fedavg"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job pt_mc_fedavg" ]
        "result":
          "type": "job_submit_success"
      - "trigger":
          "type": "run_state"
          "data": { "run_finished": True }
        "actions": [ "ensure_current_job_done" ]
        "result":
          "type": "run_state"
          "data": { "run_finished": True }
    setup:
      - python -c "from torchvision.datasets import CIFAR10; CIFAR10(root='/tmp/nvflare/data', train=True, download=True)"
    teardown:
      - rm -rf /tmp/nvflare/data
  - test_name: "run pt-mc-cyclic"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job pt_mc_cyclic" ]
        "result":
          "type": "job_submit_success"
      - "trigger":
          "type": "run_state"
          "data": { "run_finished": True }
        "actions": [ "ensure_current_job_done" ]
        "result":
          "type": "run_state"
          "data": { "run_finished": True }
    setup:
      - python -c "from torchvision.datasets import CIFAR10; CIFAR10(root='/tmp/nvflare/data', train=True, download=True)"
    teardown:
      - rm -rf /tmp/nvflare/data