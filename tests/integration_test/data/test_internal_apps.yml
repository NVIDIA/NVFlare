n_servers: 1
n_clients: 2
jobs_root_dir: ./data/apps
cleanup: True


tests:
  - test_name: "run global_model_eval"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job global_model_eval" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.GlobalModelEvalValidator
        args: { server_model_names: ["server"] }
      - path: tests.integration_test.validators.NumpySAGResultValidator
        args: { expected_result: [ [ 4, 5, 6 ], [ 7, 8, 9 ], [ 10, 11, 12 ] ] }
  - test_name: "run pt"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job pt" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.PTModelValidator
    setup:
      - python -c "from torchvision.datasets import CIFAR10; CIFAR10(root='/tmp/nvflare/cifar10_data', download=True)"
    teardown:
      - rm -rf /tmp/nvflare/cifar10_data
  - test_name: "run cross_val_one_client"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job cross_val_one_client" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.CrossValSingleClientResultValidator
        args: { server_model_names: ["server"] }
      - path: tests.integration_test.validators.NumpySAGResultValidator
        args: { expected_result: [ [ 4, 5, 6 ], [ 7, 8, 9 ], [ 10, 11, 12 ] ] }
  - test_name: "run cross_val"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job cross_val" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.CrossValResultValidator
        args: { server_model_names: ["server"] }
      - path: tests.integration_test.validators.NumpySAGResultValidator
        args: { expected_result: [ [ 4, 5, 6 ], [ 7, 8, 9 ], [ 10, 11, 12 ] ] }
  - test_name: "run np_sag"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job np_sag" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.NumpySAGResultValidator
        args: { expected_result: [ [ 4, 5, 6 ], [ 7, 8, 9 ], [ 10, 11, 12 ] ] }
  - test_name: "run np_sag_weights_diff"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job np_sag_weights_diff" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.NumpySAGResultValidator
        args: { expected_result: [ [ 4, 5, 6 ], [ 7, 8, 9 ], [ 10, 11, 12 ] ] }
  - test_name: "run filters"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job filters" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.NumpyModelValidator
  - test_name: "run tb_streaming"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job tb_streaming" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.TBResultValidator
  - test_name: "run tf"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job tf" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.TFModelValidator
  - test_name: "run cyclic"
    event_sequence:
      - "trigger":
          "type": "server_log"
          "data": "Server started"
        "actions": [ "submit_job cyclic" ]
        "result":
          "type": "run_state"
          "data": { }
    validators:
      - path: tests.integration_test.validators.TFModelValidator
