{
    workflows {
        SAG.workflow {
            id = "scatter_and_gather",
            path = "nvflare.app_common.workflows.scatter_and_gather.ScatterAndGather"
            args {
                min_clients =  1,
                num_rounds = 1,
                start_round =  0,
                wait_time_after_min_received = 0,
                aggregator_id = "aggregator",
                persistor_id = "persistor",
                shareable_generator_id =  "shareable_generator",
                train_task_name = "train",
                train_timeout  =  0
            }
        }

        SAG.components {
            persistor {
              id =  "persistor",
              name =  "PTFileModelPersistor",
              args.model{
                path = "net.Net"
              }
            }
            shareable_generator {
              id =  "shareable_generator",
              path =  "nvflare.app_common.shareablegenerators.full_model_shareable_generator.FullModelShareableGenerator",
              args {}
            }
            aggregator {
                id = "aggregator",
                path = "nvflare.app_common.aggregators.intime_accumulate_model_aggregator.InTimeAccumulateWeightedAggregator",
                args.expected_data_kind = "WEIGHTS",
            }
            model_selector {
                id = "model_selector"
                name = "IntimeModelSelector"
                args.key_metric =  "accuracy"
            }
        }
        SAG.executors {

            PTFilePipeLauncherExecutor {
                default = true
                script = "custom/cifar10.py"
                executor {
                    tasks = ["train"]
                    executor {
                        name = "PTFilePipeLauncherExecutor"
                        args {
                            launcher_id="pt_launcher"
                        }
                    }
                }
                components {
                    pt_launcher {
                      id = "pt_launcher"
                      name = "SubprocessLauncher"
                      args.script = "python {script}" # you need to modify the code path to fit your needs.
                    }
                }
            }
        }

    }
}